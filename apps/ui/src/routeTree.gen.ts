/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SignupImport } from "./routes/signup";
import { Route as LoginImport } from "./routes/login";
import { Route as IndexImport } from "./routes/index";
import { Route as DashboardLayoutImport } from "./routes/dashboard/_layout";
import { Route as DashboardLayoutIndexImport } from "./routes/dashboard/_layout/index";
import { Route as DashboardLayoutUsageImport } from "./routes/dashboard/_layout/usage";
import { Route as DashboardLayoutSettingsImport } from "./routes/dashboard/_layout/settings";
import { Route as DashboardLayoutModelsImport } from "./routes/dashboard/_layout/models";
import { Route as DashboardLayoutApiKeysImport } from "./routes/dashboard/_layout/api-keys";

// Create Virtual Routes

const DashboardImport = createFileRoute("/dashboard")();

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
	id: "/dashboard",
	path: "/dashboard",
	getParentRoute: () => rootRoute,
} as any);

const SignupRoute = SignupImport.update({
	id: "/signup",
	path: "/signup",
	getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
	id: "/login",
	path: "/login",
	getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => rootRoute,
} as any);

const DashboardLayoutRoute = DashboardLayoutImport.update({
	id: "/_layout",
	getParentRoute: () => DashboardRoute,
} as any);

const DashboardLayoutIndexRoute = DashboardLayoutIndexImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => DashboardLayoutRoute,
} as any);

const DashboardLayoutUsageRoute = DashboardLayoutUsageImport.update({
	id: "/usage",
	path: "/usage",
	getParentRoute: () => DashboardLayoutRoute,
} as any);

const DashboardLayoutSettingsRoute = DashboardLayoutSettingsImport.update({
	id: "/settings",
	path: "/settings",
	getParentRoute: () => DashboardLayoutRoute,
} as any);

const DashboardLayoutModelsRoute = DashboardLayoutModelsImport.update({
	id: "/models",
	path: "/models",
	getParentRoute: () => DashboardLayoutRoute,
} as any);

const DashboardLayoutApiKeysRoute = DashboardLayoutApiKeysImport.update({
	id: "/api-keys",
	path: "/api-keys",
	getParentRoute: () => DashboardLayoutRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexImport;
			parentRoute: typeof rootRoute;
		};
		"/login": {
			id: "/login";
			path: "/login";
			fullPath: "/login";
			preLoaderRoute: typeof LoginImport;
			parentRoute: typeof rootRoute;
		};
		"/signup": {
			id: "/signup";
			path: "/signup";
			fullPath: "/signup";
			preLoaderRoute: typeof SignupImport;
			parentRoute: typeof rootRoute;
		};
		"/dashboard": {
			id: "/dashboard";
			path: "/dashboard";
			fullPath: "/dashboard";
			preLoaderRoute: typeof DashboardImport;
			parentRoute: typeof rootRoute;
		};
		"/dashboard/_layout": {
			id: "/dashboard/_layout";
			path: "/dashboard";
			fullPath: "/dashboard";
			preLoaderRoute: typeof DashboardLayoutImport;
			parentRoute: typeof DashboardRoute;
		};
		"/dashboard/_layout/api-keys": {
			id: "/dashboard/_layout/api-keys";
			path: "/api-keys";
			fullPath: "/dashboard/api-keys";
			preLoaderRoute: typeof DashboardLayoutApiKeysImport;
			parentRoute: typeof DashboardLayoutImport;
		};
		"/dashboard/_layout/models": {
			id: "/dashboard/_layout/models";
			path: "/models";
			fullPath: "/dashboard/models";
			preLoaderRoute: typeof DashboardLayoutModelsImport;
			parentRoute: typeof DashboardLayoutImport;
		};
		"/dashboard/_layout/settings": {
			id: "/dashboard/_layout/settings";
			path: "/settings";
			fullPath: "/dashboard/settings";
			preLoaderRoute: typeof DashboardLayoutSettingsImport;
			parentRoute: typeof DashboardLayoutImport;
		};
		"/dashboard/_layout/usage": {
			id: "/dashboard/_layout/usage";
			path: "/usage";
			fullPath: "/dashboard/usage";
			preLoaderRoute: typeof DashboardLayoutUsageImport;
			parentRoute: typeof DashboardLayoutImport;
		};
		"/dashboard/_layout/": {
			id: "/dashboard/_layout/";
			path: "/";
			fullPath: "/dashboard/";
			preLoaderRoute: typeof DashboardLayoutIndexImport;
			parentRoute: typeof DashboardLayoutImport;
		};
	}
}

// Create and export the route tree

interface DashboardLayoutRouteChildren {
	DashboardLayoutApiKeysRoute: typeof DashboardLayoutApiKeysRoute;
	DashboardLayoutModelsRoute: typeof DashboardLayoutModelsRoute;
	DashboardLayoutSettingsRoute: typeof DashboardLayoutSettingsRoute;
	DashboardLayoutUsageRoute: typeof DashboardLayoutUsageRoute;
	DashboardLayoutIndexRoute: typeof DashboardLayoutIndexRoute;
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
	DashboardLayoutApiKeysRoute: DashboardLayoutApiKeysRoute,
	DashboardLayoutModelsRoute: DashboardLayoutModelsRoute,
	DashboardLayoutSettingsRoute: DashboardLayoutSettingsRoute,
	DashboardLayoutUsageRoute: DashboardLayoutUsageRoute,
	DashboardLayoutIndexRoute: DashboardLayoutIndexRoute,
};

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
	DashboardLayoutRouteChildren,
);

interface DashboardRouteChildren {
	DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren;
}

const DashboardRouteChildren: DashboardRouteChildren = {
	DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
};

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
	DashboardRouteChildren,
);

export interface FileRoutesByFullPath {
	"/": typeof IndexRoute;
	"/login": typeof LoginRoute;
	"/signup": typeof SignupRoute;
	"/dashboard": typeof DashboardLayoutRouteWithChildren;
	"/dashboard/api-keys": typeof DashboardLayoutApiKeysRoute;
	"/dashboard/models": typeof DashboardLayoutModelsRoute;
	"/dashboard/settings": typeof DashboardLayoutSettingsRoute;
	"/dashboard/usage": typeof DashboardLayoutUsageRoute;
	"/dashboard/": typeof DashboardLayoutIndexRoute;
}

export interface FileRoutesByTo {
	"/": typeof IndexRoute;
	"/login": typeof LoginRoute;
	"/signup": typeof SignupRoute;
	"/dashboard": typeof DashboardLayoutIndexRoute;
	"/dashboard/api-keys": typeof DashboardLayoutApiKeysRoute;
	"/dashboard/models": typeof DashboardLayoutModelsRoute;
	"/dashboard/settings": typeof DashboardLayoutSettingsRoute;
	"/dashboard/usage": typeof DashboardLayoutUsageRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	"/": typeof IndexRoute;
	"/login": typeof LoginRoute;
	"/signup": typeof SignupRoute;
	"/dashboard": typeof DashboardRouteWithChildren;
	"/dashboard/_layout": typeof DashboardLayoutRouteWithChildren;
	"/dashboard/_layout/api-keys": typeof DashboardLayoutApiKeysRoute;
	"/dashboard/_layout/models": typeof DashboardLayoutModelsRoute;
	"/dashboard/_layout/settings": typeof DashboardLayoutSettingsRoute;
	"/dashboard/_layout/usage": typeof DashboardLayoutUsageRoute;
	"/dashboard/_layout/": typeof DashboardLayoutIndexRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths:
		| "/"
		| "/login"
		| "/signup"
		| "/dashboard"
		| "/dashboard/api-keys"
		| "/dashboard/models"
		| "/dashboard/settings"
		| "/dashboard/usage"
		| "/dashboard/";
	fileRoutesByTo: FileRoutesByTo;
	to:
		| "/"
		| "/login"
		| "/signup"
		| "/dashboard"
		| "/dashboard/api-keys"
		| "/dashboard/models"
		| "/dashboard/settings"
		| "/dashboard/usage";
	id:
		| "__root__"
		| "/"
		| "/login"
		| "/signup"
		| "/dashboard"
		| "/dashboard/_layout"
		| "/dashboard/_layout/api-keys"
		| "/dashboard/_layout/models"
		| "/dashboard/_layout/settings"
		| "/dashboard/_layout/usage"
		| "/dashboard/_layout/";
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	LoginRoute: typeof LoginRoute;
	SignupRoute: typeof SignupRoute;
	DashboardRoute: typeof DashboardRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	LoginRoute: LoginRoute,
	SignupRoute: SignupRoute,
	DashboardRoute: DashboardRouteWithChildren,
};

export const routeTree = rootRoute
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_layout"
      ]
    },
    "/dashboard/_layout": {
      "filePath": "dashboard/_layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_layout/api-keys",
        "/dashboard/_layout/models",
        "/dashboard/_layout/settings",
        "/dashboard/_layout/usage",
        "/dashboard/_layout/"
      ]
    },
    "/dashboard/_layout/api-keys": {
      "filePath": "dashboard/_layout/api-keys.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/models": {
      "filePath": "dashboard/_layout/models.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/settings": {
      "filePath": "dashboard/_layout/settings.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/usage": {
      "filePath": "dashboard/_layout/usage.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/": {
      "filePath": "dashboard/_layout/index.tsx",
      "parent": "/dashboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
