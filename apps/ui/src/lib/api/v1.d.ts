/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Health check response. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							health: {
								status: string;
								database: {
									connected: boolean;
									error?: string;
								};
							};
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/stripe/webhook": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Webhook received successfully */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							received: boolean;
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/user/me": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description User response object. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							user: {
								id: string;
								email: string;
								name: string | null;
							};
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description User deleted successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description Unauthorized. */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description User not found. */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		options?: never;
		head?: never;
		patch: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						name?: string;
						/** Format: email */
						email?: string;
					};
				};
			};
			responses: {
				/** @description User updated successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							user: {
								id: string;
								email: string;
								name: string | null;
							};
							message: string;
						};
					};
				};
				/** @description Unauthorized. */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description User not found. */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		trace?: never;
	};
	"/user/me/passkeys": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description List of user's passkeys. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							passkeys: {
								id: string;
								name: string | null;
								deviceType: string | null;
								createdAt: string;
							}[];
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/user/me/passkeys/{id}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					id: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Passkey deleted successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/user/password": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						currentPassword: string;
						newPassword: string;
					};
				};
			};
			responses: {
				/** @description Password updated successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description Unauthorized or incorrect current password. */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description User not found. */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/logs": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: {
					apiKeyId?: string;
					providerKeyId?: string;
					projectId?: string;
					orgId?: string;
					startDate?: string;
					endDate?: string;
					finishReason?: string;
					provider?: string;
					model?: string;
					cursor?: string;
					orderBy?: "createdAt_asc" | "createdAt_desc";
					limit?: string;
				};
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description User logs response with pagination. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @description Optional message about the response */
							message?: string;
							/** @description Array of log entries */
							logs: {
								id: string;
								createdAt: string;
								updatedAt: string;
								organizationId: string;
								projectId: string;
								apiKeyId: string;
								providerKeyId: string;
								duration: number;
								requestedModel: string;
								requestedProvider: string | null;
								usedModel: string;
								usedProvider: string;
								responseSize: number;
								content: string | null;
								finishReason: string | null;
								promptTokens: string | null;
								completionTokens: string | null;
								totalTokens: string | null;
								messages?: unknown;
								temperature: number | null;
								maxTokens: number | null;
								topP: number | null;
								frequencyPenalty: number | null;
								presencePenalty: number | null;
								hasError: boolean | null;
								errorDetails?: unknown;
								cost: number | null;
								inputCost: number | null;
								outputCost: number | null;
								estimatedCost: boolean | null;
								canceled: boolean | null;
								streamed: boolean | null;
								cached: boolean | null;
							}[];
							/** @description Pagination metadata */
							pagination: {
								/** @description Cursor to use for the next page of results, null if no more results */
								nextCursor: string | null;
								/** @description Whether there are more results available */
								hasMore: boolean;
								/** @description Number of items requested per page */
								limit: number;
							};
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/activity": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query: {
					days: string;
				};
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Activity data grouped by day */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							activity: {
								date: string;
								requestCount: number;
								inputTokens: number;
								outputTokens: number;
								totalTokens: number;
								cost: number;
								inputCost: number;
								outputCost: number;
								errorCount: number;
								errorRate: number;
								cacheCount: number;
								cacheRate: number;
								modelBreakdown: {
									model: string;
									provider: string;
									requestCount: number;
									inputTokens: number;
									outputTokens: number;
									totalTokens: number;
									cost: number;
								}[];
							}[];
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/keys/api": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description List of API keys. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							apiKeys: {
								id: string;
								createdAt: string;
								updatedAt: string;
								description: string;
								/** @enum {string|null} */
								status: "active" | "inactive" | "deleted" | null;
								projectId: string;
								maskedToken: string;
							}[];
						};
					};
				};
			};
		};
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						description: string;
					};
				};
			};
			responses: {
				/** @description API key created successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							apiKey: {
								id: string;
								createdAt: string;
								updatedAt: string;
								description: string;
								/** @enum {string|null} */
								status: "active" | "inactive" | "deleted" | null;
								projectId: string;
								token: string;
							};
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/keys/api/{id}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					id: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description API key deleted successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description Unauthorized. */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description API key not found. */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		options?: never;
		head?: never;
		patch: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					id: string;
				};
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						/** @enum {string} */
						status: "active" | "inactive";
					};
				};
			};
			responses: {
				/** @description API key status updated successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							apiKey: {
								id: string;
								createdAt: string;
								updatedAt: string;
								description: string;
								/** @enum {string|null} */
								status: "active" | "inactive" | "deleted" | null;
								projectId: string;
								maskedToken: string;
							};
						};
					};
				};
				/** @description Unauthorized. */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description API key not found. */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		trace?: never;
	};
	"/keys/provider": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description List of provider keys. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							providerKeys: {
								id: string;
								createdAt: string;
								updatedAt: string;
								provider: string;
								baseUrl: string | null;
								/** @enum {string|null} */
								status: "active" | "inactive" | "deleted" | null;
								organizationId: string;
								maskedToken: string;
							}[];
						};
					};
				};
			};
		};
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						provider: string;
						token: string;
						/** Format: uri */
						baseUrl?: string;
						organizationId: string;
					};
				};
			};
			responses: {
				/** @description Provider key created successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							providerKey: {
								id: string;
								createdAt: string;
								updatedAt: string;
								provider: string;
								baseUrl: string | null;
								/** @enum {string|null} */
								status: "active" | "inactive" | "deleted" | null;
								organizationId: string;
								token: string;
							};
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/keys/provider/{id}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					id: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Provider key deleted successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description Unauthorized. */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description Provider key not found. */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		options?: never;
		head?: never;
		patch: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					id: string;
				};
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						/** @enum {string} */
						status: "active" | "inactive";
					};
				};
			};
			responses: {
				/** @description Provider key status updated successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							providerKey: {
								id: string;
								createdAt: string;
								updatedAt: string;
								provider: string;
								baseUrl: string | null;
								/** @enum {string|null} */
								status: "active" | "inactive" | "deleted" | null;
								organizationId: string;
								maskedToken: string;
							};
						};
					};
				};
				/** @description Unauthorized. */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description Provider key not found. */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		trace?: never;
	};
	"/projects/{id}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					id: string;
				};
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						cachingEnabled?: boolean;
						cacheDurationSeconds?: number;
						/** @enum {string} */
						mode?: "api-keys" | "credits" | "hybrid";
					};
				};
			};
			responses: {
				/** @description Project settings updated successfully. */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
							project: {
								id: string;
								createdAt: string;
								updatedAt: string;
								name: string;
								organizationId: string;
								cachingEnabled: boolean;
								cacheDurationSeconds: number;
								/** @enum {string} */
								mode: "api-keys" | "credits" | "hybrid";
							};
						};
					};
				};
				/** @description Unauthorized. */
				401: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
				/** @description Project not found. */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							message: string;
						};
					};
				};
			};
		};
		trace?: never;
	};
	"/orgs": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description List of organizations the user belongs to */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							organizations: {
								id: string;
								createdAt: string;
								updatedAt: string;
								name: string;
								credits: string;
							}[];
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/orgs/{id}/projects": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					id: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description List of projects for the specified organization */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							projects: {
								id: string;
								createdAt: string;
								updatedAt: string;
								name: string;
								organizationId: string;
								cachingEnabled: boolean;
								cacheDurationSeconds: number;
								/** @enum {string} */
								mode: "api-keys" | "credits" | "hybrid";
							}[];
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/payments/create-payment-intent": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						amount: number;
					};
				};
			};
			responses: {
				/** @description Payment intent created successfully */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							clientSecret: string;
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/payments/create-setup-intent": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Setup intent created successfully */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							clientSecret: string;
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/payments/payment-methods": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Payment methods retrieved successfully */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							paymentMethods: {
								id: string;
								stripePaymentMethodId: string;
								type: string;
								isDefault: boolean;
								cardBrand?: string;
								cardLast4?: string;
								expiryMonth?: number;
								expiryYear?: number;
							}[];
						};
					};
				};
			};
		};
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/payments/payment-methods/default": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						paymentMethodId: string;
					};
				};
			};
			responses: {
				/** @description Default payment method set successfully */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							success: boolean;
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/payments/payment-methods/{id}": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post?: never;
		delete: {
			parameters: {
				query?: never;
				header?: never;
				path: {
					id: string;
				};
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Payment method deleted successfully */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							success: boolean;
						};
					};
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	"/payments/top-up-with-saved-method": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: {
				content: {
					"application/json": {
						amount: number;
						paymentMethodId: string;
					};
				};
			};
			responses: {
				/** @description Payment processed successfully */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							success: boolean;
						};
					};
				};
			};
		};
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: never;
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
